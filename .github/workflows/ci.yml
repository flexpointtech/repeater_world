on: [ push ]
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:14-alpine
        ports:
          - "10401:5432"
        env:
          POSTGRES_USER: repeater_world_development
          POSTGRES_PASSWORD: te6ahng1phi1uizaeGhahMof1
          POSTGRES_DB: repeater_world_test
    env:
      RAILS_ENV: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}

      - id: base-ref-commit
        run: echo "::set-output name=revision::`git rev-parse HEAD`"

      - name: simplecov resultset cache
        id: simplecov-resultset
        uses:  actions/cache@v2
        with:
          path: coverage/.resultset.json
          key: simplecov-resultset-${{ steps.base-ref-commit.outputs.revision }}

      - name: Install Ruby and Gems
        uses: ruby/setup-ruby@v1
        if: steps.simplecov-resultset.outputs.cache-hit != 'true'
        with:
          bundler-cache: true

      - name: Set Up Database Schema
        if: steps.simplecov-resultset.outputs.cache-hit != 'true'
        run: bin/rails db:migrate

      - name: Run Tests
        if: steps.simplecov-resultset.outputs.cache-hit != 'true'
        run: bundle exec rspec

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: base-result
          path: coverage/.resultset.json


#      - name: RSpec Report
#        uses: SonicGarden/rspec-report-action@v2
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          json-path: tmp/rspec_results.json
#      - name: SimpleCov Check
#        uses: joshmfrankel/simplecov-check-action@1.0.0
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Create Coverage Summary
#        uses: irongut/CodeCoverageSummary@v1.3.0
#        with:
#          filename: coverage/coverage.xml
#          badge: true
#          indicators: true
#          format: markdown
#      - name: Add Coverage PR Comment
#        uses: marocchino/sticky-pull-request-comment@v2
#        with:
#          recreate: true
#          path: code-coverage-results.md

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: rake standard
      # TODO: do we want this when we have dependabot?
#      - name: Security audit dependencies
#        run: bin/bundler-audit --update
